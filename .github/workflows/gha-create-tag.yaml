name: Create tag/release

on:
  workflow_call:
    inputs:
      deploy:
        required: true
        type: string
        default: 'true'

permissions:
  id-token: write
  contents: read
  actions: write
  deployments: write

jobs:
  build:
    name: Create Tag
    runs-on: ubuntu-latest
    steps:
      - name: Skip Duplicate Actions
        uses: fkirc/skip-duplicate-actions@v5.3.1
        if: github.event.inputs.deploy == 'true'
        with:
          concurrent_skipping: 'same_content'
          cancel_others: 'true'

      - name: Check out code
        if: github.event.inputs.deploy == 'true'
        uses: actions/checkout@v4

      - name: Get current date
        if: github.event.inputs.deploy == 'true'
        id: date
        run: echo "date=$(date +'%Y-%m-%d-%H-%M-%S')" >> $GITHUB_OUTPUT


      - name: Create tag
        if: github.event.inputs.deploy == 'true'
        uses: actions/github-script@v8.0.0
        with:
          github-token: ${{ secrets.JENKINS_PAT_FLUXCD }}
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/deploy-prod-${{ steps.date.outputs.date }}",
              sha: context.sha
            })
      - uses: chrnorm/deployment-action@v2
        name: Create GitHub deployment
        id: deployment
        with:
          token: '${{ github.token }}'
          environment: production
          environment-url: 'https://www.freeletics.com'
          initial-status: in_progress
          ref: "deploy-prod-${{ steps.date.outputs.date }}"
          payload: "{\"docker_image_tag\":\"deploy-prod-${{ steps.date.outputs.date }}\",\"deployed_by\":\"${{github.actor}}\"}"
      - name: Update deployment status (in_progress)
        uses: chrnorm/deployment-status@v2
        with:
          token: '${{ github.token }}'
          state: 'in_progress'
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}

      # adding this here so if the repo do not have the release workflow it will update here
      ##### Git versions ####
      - name: Check out code
        uses: actions/checkout@v4
        if: github.event.inputs.deploy == 'true'
        with:
          fetch-depth: 0
          repository: 'freeletics/releases'
          path: 'releases'
          ref: 'main'
          token: ${{ secrets.JENKINS_PAT_FLUXCD }}


      - name: Create versions.yaml
        uses: mikefarah/yq@v4.47.1
        if: github.event.inputs.deploy == 'true'
        with:
          cmd: yq -i e '.${{ github.event.repository.name }} = "deploy-prod-${{ steps.date.outputs.date }}"' releases/versions.yaml

      - name: Push versions.yaml back
        if: github.event.inputs.deploy == 'true'
        run: |
          cd releases
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add versions.yaml
          git commit -m "${{ github.event.repository.name }} BUMP"
          git push
