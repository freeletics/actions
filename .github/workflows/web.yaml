name: "Web Build with Docker Kaniko"

on:
  workflow_call:
    outputs:
      IMAGE_TAG:
        description: "the image tag"
        value: ${{ jobs.build.outputs.IMAGE_TAG }}
    inputs:
      env_name:
        type: string
        required: false
      AWS_ECR_ENV_NAME:
        required: false
        type: string
        default: "prod"
      AWS_REGION:
        required: true
        type: string
      AWS_ACCOUNT_ID:
        required: true
        type: string
      APP_ENV:
        required: false
        type: string
        default: "staging"
      BRANCH:
        required: false
        type: string
      DOCKERFILE:
        required: false
        type: string
        default: "Dockerfile"
      DEPLOY:
        required: false
        type: boolean
        default: false
      QA:
        required: false
        type: boolean
        default: false
      CONTEXT:
        required: false
        type: string

permissions:
  id-token: write
  contents: read
  actions: write

env:
  APP_ENV: "${{ inputs.APP_ENV }}"

jobs:
  build:
    outputs:
      IMAGE_TAG: ${{ steps.IMAGE_TAG.outputs.IMAGE_TAG }}
    name: Build Docker image
    runs-on: ubuntu-latest
    steps:
      - name: Skip Duplicate Actions
        uses: fkirc/skip-duplicate-actions@v5.2.0
        with:
          concurrent_skipping: "same_content"
          cancel_others: "true"
          
      - name: Check out code
        uses: actions/checkout@v3

      - name: Cache yarn modules
        id: cache-yarn
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            public
          key: ${{ runner.os }}-${{ inputs.APP_ENV }}-build-web-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-${{ inputs.APP_ENV }}-build-web-

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '18.12.1'

      - name: Login to NPM 
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" >> .npmrc

      - name: Install deps
        run: yarn install
          
      - name: Build
        run: yarn build
        env:
          NODE_ENV: "production"
          CI: false

      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: |
            dist
          retention-days: 5

  docker:
    needs: build
    permissions:
      id-token: write
      contents: read
      actions: write
    uses: freeletics/actions/.github/workflows/docker.yaml@web-workflow-idea #this has to be public
    with:
      ARTIFACTS_NAME: "dist-web-artifact"
      AWS_REGION: "eu-west-1"
      AWS_ACCOUNT_ID: "524690225562"
    secrets: inherit